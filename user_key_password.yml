---
- name: Create a local user account to match supplied public keys
  hosts: localhost

  vars:
    key_dir: "{{ playbook_dir + '/public_keys/' }}"
    password_dir: "{{ playbook_dir + '/passwords/' }}"
    new_keys: "{{ query('fileglob', key_dir + '*.id_*.pub') }}"
    user: "{{ key.split('/')[-1] | regex_replace('^(.*).id_.*.pub$', '\\1') }}"
    comment: "{{ (user | replace('.', ' ') | title ) + ' (Capgemini)' }}"
    password_file: "{{ password_dir + user + '.password' }}"
    password_generate: "{{ lookup('password',
                                   password_file,
                                   length=14,
                                   chars=['ascii_letters',
                                          'digits',
                                          'punctuation']) }}"
    new_user: "{{ ansible_facts.getent_passwd[user] is not defined }}"
    key_failures: {}
    reset_password: false  # default

  tasks:

  - name: Establish which users exist already
    ansible.builtin.getent:
      database: passwd

  - name: Remove existing password files
    loop: "{{ new_keys }}"
    when: new_user or reset_password
    loop_control:
      loop_var: key
    file:
      path: "{{ password_file }}"
      state: absent

  - name: Set and save initial passwords per user
    loop: "{{ new_keys }}"
    when: new_user or reset_password
    loop_control:
      loop_var: key
    set_fact:
      passwords: "{{ passwords |
                     default({}) |
                     combine(password_generate |
                             community.general.dict_kv(user)) }}"

  - name: Create a user for each unprocessed key file
    register: r_user
    become: true
    loop: "{{ new_keys }}"
    loop_control:
      loop_var: key
    user:
      name: "{{ user }}"
      comment: "{{ comment }}"
      password: "{{ omit if passwords[user] is not defined else
                    passwords[user] | password_hash('sha512') }}"
      password_expire_max: 90
      update_password: on_create

  - name: Create user's .ssh directory
    become: true
    loop: "{{ new_keys }}"
    loop_control:
      loop_var: key
    file:
      path: "{{ '/home/' + user + '/.ssh' }}"
      mode: '0700'
      owner: "{{ user }}"
      group: "{{ user }}"
      setype: ssh_home_t
      state: directory

  - name: Create user's .ssh authorized_keys file
    become: true
    any_errors_fatal: true
    loop: "{{ new_keys }}"
    loop_control:
      loop_var: key
    copy:
      src: "{{ key }}"
      dest: "{{ '/home/' + user + '/.ssh/authorized_keys' }}"
      mode: '0700'
      owner: "{{ user }}"
      group: "{{ user }}"
      setype: ssh_home_t

  - name: Remove any old .pub.installed files
    loop: "{{ new_keys }}"
    file:
      path: "{{ item + '.installed' }}"
      state: absent

  - name: Rename .pub files to .pub.installed
    loop: "{{ new_keys }}"
    changed_when: true
    command:
      cmd: "{{ 'mv ' + item + ' ' + item + '.installed' }}"
